package br.com.intelbras.chatclient;

import java.util.List;

import br.com.intelbras.chat.client.ContatoServiceClient;
import br.com.intelbras.chat.model.Contato;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.event.FieldEvents.BlurEvent;
import com.vaadin.event.FieldEvents.BlurListener;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;

public class UsersUI extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	
	private Table usuariosList;

	private Button buttonSair;

	private ContatoServiceClient service;

	private List<Contato> listUsers;

	private ChatClientUI parent;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 * @param service 
	 */
	public UsersUI(ContatoServiceClient service, ChatClientUI parent) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		this.parent = parent;
		
		this.service = service;

		usuariosList  = usuariosList();
		buttonSair = buttonSair();
		mainLayout.addComponent(buttonSair);
		mainLayout.addComponent(usuariosList);
	}

	private Button buttonSair() {
		buttonSair = new Button("Sair");
		buttonSair.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				UsersUI.this.actionSair();
				
			}
		});
		return buttonSair;
	}

	protected void actionSair() {
		parent.actionSair();
		
	}

	private Table usuariosList() {
		
		usuariosList = new Table("Lista de contatos");
		usuariosList.addContainerProperty("Nome", String.class, null);
		usuariosList.addContainerProperty("Apelido", String.class, null);
		usuariosList.addContainerProperty("Conversa", CheckBox.class, null);
		
		updateTable();
		
		return usuariosList;
	}

	public void updateTable() {
		usuariosList.removeAllItems();
		if(parent.usuarioLogado != null){
			listUsers = this.service.list(parent.usuarioLogado.getCodigo());
			CheckBox checkBox;
			for (Contato c : listUsers) {
				checkBox = new CheckBox();
				checkBox.setValue(c.isOpen());
				checkBox.addListener(new ChangeListener(c));
				Object obj[] = {c.getNome(), c.getApelido(), checkBox};
				usuariosList.addItem(obj, c.getCodigo());
			}
			usuariosList.setPageLength(listUsers.size());
		}
		
	}
	
	private class ChangeListener implements Listener{

		/**
		 * 
		 */
		private static final long serialVersionUID = 1L;
		private Contato c;

		public ChangeListener(Contato c) {
			this.c = c;
		}

		@Override
		public void componentEvent(Event event) {
			CheckBox check = (CheckBox)event.getSource();
			UsersUI.this.parent.updateContatoOpen(c.getCodigo(), check.getValue());
			
		}
		
	}

	@AutoGenerated
	private void buildMainLayout() {
		mainLayout = new VerticalLayout();
		mainLayout.setSizeFull();
		mainLayout.setStyleName("userslayout");
		mainLayout.setSpacing(true);
	}

}
